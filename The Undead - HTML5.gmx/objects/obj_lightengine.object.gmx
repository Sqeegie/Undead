<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-250</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the object engine
/*
// Variables de base
global.sl_viewid  = 0;    // Index de la view dans laquelle afficher les effets
sl_buffer_xmargin = 8;    // Marges du buffer
sl_buffer_ymargin = 8;
sl_maxexposure    = 0.45; // Facteur maximal de saturation des lumières

// Variables relatives aux ombres solaires
sl_sunshadows_active      = true; // Active le rendu des ombres du soleil
sl_sunshadows_texturesize = 0.5;  // Facteur de taille de la texture d'ombre (Entre 0 et 1)
sl_sunshadows_quality     = 0.25; // Facteur déterminant le nombre de samples composant l'ombre (Entre 0 et 1)
sl_sunshadows_alpha       = 0.77; // Facteur de transparence de l'ombre (Entre 0 et 1)
sl_sunshadows_alphalimit  = 0.61; // Taux de luminosité ambiante minimum pour lequel les ombres solaires sont visibles
sl_sunshadows_margin      = 200;  // Taille de la marge entourant la surface d'ombre, en pixels

// Facteurs d'étirement des ombres solaires appliqués pour chaque layer
sl_sunshadows_layerscale[0] = 0.2;
sl_sunshadows_layerscale[1] = 0.35;
sl_sunshadows_layerscale[2] = 0.6;
sl_sunshadows_layerscale[3] = 1;
sl_sunshadows_layerscale[4] = 1;
sl_sunshadows_layerscale[5] = 1;

sl_ambientshadows_active = true; // Active le rendu des ombres ambiantes
*/

SL_engine_ini_begin(); // Start system initialization
sl_sunshadows_active = true; // Enable rendering solar shades
sl_ambientshadows_active = true; // Enable rendering ambient shadows
sl_timespeed = (1 / 60) / room_speed // Determines the speed of the clock
// Generate ambient maps
SL_sprite_set_ambient(spr_character);
SL_sprite_set_ambient(spr_bush01);
SL_sprite_set_ambient(spr_crate02);
SL_sprite_set_ambient(spr_crate02);
// List of objects projecting a global shadow
// SL_global_cast_obj(layer,object,sprite,sun,amb);
SL_global_cast_obj(0, obj_player, spr_character_smask, 1, 1);
SL_global_cast_obj(2, obj_bush01, spr_bush01_shadow, 2, 1);
SL_global_cast_obj(1, obj_crate02, spr_crate02, 1, 1);
SL_global_cast_obj(1, obj_crate01, spr_crate01, 1, 1);
// List of light objects
//SL_add_light (obj_light_01);
SL_ToD(); // Initialize the ToD
SL_set_time(13.5); // Initialization time
SL_engine_ini_end(); // Complete system initialization 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Release the memory used by all of the surfaces
SL_engine_free (); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Render of all the lights and shadows
SL_engine_render();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Display all the lights and shadows
SL_engine_draw(); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
